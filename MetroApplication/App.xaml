<Application x:Class="MetroApplication.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             
         

             xmlns:viewmodels ="clr-namespace:MetroApplication.ViewModels" 
           

             xmlns:views1="clr-namespace:MetroApplication.Views"
             xmlns:reports="clr-namespace:MetroApplication.ViewModels.Отчёты">

    <Application.Resources>


        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/CustomizedWindow/Windows.xaml" />
                <ResourceDictionary Source="Styles/Sections/Sections.xaml"/>
                <ResourceDictionary Source="Styles/Buttons/Buttons.xaml"/>
                <ResourceDictionary Source="Styles/Images/Images.xaml"/>
                <ResourceDictionary Source="Styles/Labels/Labels.xaml"/>
                <ResourceDictionary Source="Styles/DataGrids/Grids.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate DataType="{x:Type TypeName=viewmodels:TabControlViewModel}">
                <views1:TabControlView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type TypeName=viewmodels:AuthOPViewModel}">
                <views1:Auth/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type TypeName=viewmodels:ArchiveOfSettingsViewModel}">
                <views1:ArchiveOfSettings/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type TypeName=viewmodels:TerminalsAndStationsViewModel}">
                <views1:TerminalsAndStations/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type TypeName=viewmodels:SchemOfMetroViewModel}">
                <views1:SchemOfMetro/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type TypeName=reports:ReportsViewModel}">
                <views1:Reports/>
            </DataTemplate>
            <!--<DataTemplate DataType="{x:Type TypeName=viewmodels:UpdateStationViewModel}">
                <views:EditStationWindow/>
            </DataTemplate>-->
            <!--<DataTemplate DataType="{x:Type TypeName=viewmodels:DeleteStationViewModel}">
                <views:DeleteStationWindow/>
            </DataTemplate>-->
            <Style x:Key="TabControl" TargetType="TabControl">
                <Setter Property="Background" Value="Snow"/>
                <Setter Property="BorderBrush" Value="LightGreen"/>
                <Setter Property="BorderThickness" Value="2"/>

            </Style>
            <Style x:Key="TabControlItem" TargetType="TabItem">


                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="LightCoral"/>
                <Setter Property="FontFamily" Value="Times New Roman"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Margin" Value="10 0 0 0"/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="Width" Value="100"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Effect">

                            <Setter.Value>
                                <DropShadowEffect BlurRadius="2" ShadowDepth="3" Direction="125"/>

                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="LightSlateGray"/>
                    </Trigger>


                    <Trigger Property="IsMouseDirectlyOver"  Value="True">
                        <Setter Property="Background" Value="LightSlateGray"/>
                    </Trigger>

                    <Trigger Property="IsMouseOver"  Value="True">
                        <Setter Property="Background" Value="LightSlateGray"/>
                    </Trigger>


                </Style.Triggers>

            </Style>
            <Style x:Key="border1" TargetType="Border" >
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="0" Opacity="0.7"/>
                    </Setter.Value>
                </Setter>

            </Style>
            <!--<Style TargetType="Border" BasedOn="{StaticResource border1}"/>-->

            <!-- In sub style override the properties you need -->
            <Style BasedOn="{StaticResource border1}" TargetType="Border" x:Key="border2" >
                <Setter Property="Height" Value="1000"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color ="Gray" Opacity="55" ShadowDepth="0" BlurRadius="10" Direction="180"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="searchbutton" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="Border" CornerRadius="7" BorderThickness="2" BorderBrush="Black">
                                <TextBlock Text="Найти" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="SkyBlue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 0 10 0"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="10 0 0 0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border CornerRadius="5" BorderBrush="Black" Background="LightSkyBlue">
                                <ScrollViewer x:Name="PART_ContentHost" />

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CorrectMessage" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Times New Roman"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="Bold"/>

                <Style.Triggers>
                    <EventTrigger RoutedEvent="TextBlock.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                            From="White" To="LightGreen" Duration="0:0:1.5" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="TextBlock.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                            From="LightGreen" To="White" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ErrorMessage" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Times New Roman"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="Bold"/>

                <Style.Triggers>
                    <EventTrigger RoutedEvent="TextBlock.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                From="White" To="Red" Duration="0:0:1.5" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="TextBlock.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                From="Red" To="White" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
